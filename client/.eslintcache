[{"/Users/joonholee/dev/piggybank-ver-1.0/client/src/index.jsx":"1","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/index.js":"2","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/budgetReducer.js":"3","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/userReducer.js":"4","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/savingGoalReducer.js":"5","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/payingReducer.js":"6","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/savingReducer.js":"7","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/dateReducer.js":"8","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/App.jsx":"9","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/types.js":"10","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Style/theme.jsx":"11","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Style/GlobalStyles.jsx":"12","/Users/joonholee/dev/piggybank-ver-1.0/client/src/routes.js":"13","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/Nav.jsx":"14","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Home/Home.jsx":"15","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Paying/Paying.jsx":"16","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Introduction/Introduce.jsx":"17","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Join/Join.jsx":"18","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Mypage/Mypage.jsx":"19","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/SavingGoal/SavingGoal.jsx":"20","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Budget/Budget.jsx":"21","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Login/Login.jsx":"22","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Saving/Saving.jsx":"23","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/Header.jsx":"24","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/Footer.jsx":"25","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/CenterButton.jsx":"26","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/CreateList.jsx":"27","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/CreateBoard.jsx":"28","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/ContentHeader.jsx":"29","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/ContentBody.jsx":"30","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/utils/LoginRequired.jsx":"31","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/utils/Input.jsx":"32","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/utils/DateModal.jsx":"33","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/charts/MonthDataList.jsx":"34","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/charts/PieTotalRatio.jsx":"35","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/utils/Button.jsx":"36","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/charts/CategoryBlock.jsx":"37","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/hooks/useInput.jsx":"38","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/charts/TotalRatioGauge.jsx":"39","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Hoc/auth.js":"40","/Users/joonholee/dev/piggybank-ver-1.0/client/src/hoc/auth.js":"41","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/budgetActions.js":"42","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/payingActions.js":"43","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/savingActions.js":"44","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/savingGoalActions.js":"45","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Api/api.js":"46","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/userActions.js":"47","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/dateAction.js":"48","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/Router.jsx":"49"},{"size":1040,"mtime":1638970652953,"results":"50","hashOfConfig":"51"},{"size":485,"mtime":1638970618267,"results":"52","hashOfConfig":"51"},{"size":1266,"mtime":1638970612591,"results":"53","hashOfConfig":"51"},{"size":992,"mtime":1638970630247,"results":"54","hashOfConfig":"51"},{"size":1171,"mtime":1638970623035,"results":"55","hashOfConfig":"51"},{"size":1091,"mtime":1638970620572,"results":"56","hashOfConfig":"51"},{"size":1082,"mtime":1638970625924,"results":"57","hashOfConfig":"51"},{"size":645,"mtime":1638970615917,"results":"58","hashOfConfig":"51"},{"size":373,"mtime":1638970563765,"results":"59","hashOfConfig":"51"},{"size":1406,"mtime":1638970635742,"results":"60","hashOfConfig":"51"},{"size":560,"mtime":1638970646786,"results":"61","hashOfConfig":"51"},{"size":1556,"mtime":1638970640779,"results":"62","hashOfConfig":"51"},{"size":1727,"mtime":1630412046633,"results":"63","hashOfConfig":"51"},{"size":3205,"mtime":1638971315272,"results":"64","hashOfConfig":"51"},{"size":1118,"mtime":1638971055540,"results":"65","hashOfConfig":"51"},{"size":1822,"mtime":1638971243844,"results":"66","hashOfConfig":"51"},{"size":1473,"mtime":1638970503670,"results":"67","hashOfConfig":"51"},{"size":3924,"mtime":1638971232229,"results":"68","hashOfConfig":"51"},{"size":5435,"mtime":1638971198080,"results":"69","hashOfConfig":"51"},{"size":2801,"mtime":1638971239841,"results":"70","hashOfConfig":"51"},{"size":2562,"mtime":1638971207464,"results":"71","hashOfConfig":"51"},{"size":2795,"mtime":1638971473747,"results":"72","hashOfConfig":"51"},{"size":1657,"mtime":1638971042203,"results":"73","hashOfConfig":"51"},{"size":619,"mtime":1638971308330,"results":"74","hashOfConfig":"51"},{"size":1141,"mtime":1638970468435,"results":"75","hashOfConfig":"51"},{"size":2793,"mtime":1638970448676,"results":"76","hashOfConfig":"51"},{"size":3331,"mtime":1638971191877,"results":"77","hashOfConfig":"51"},{"size":6951,"mtime":1638971118867,"results":"78","hashOfConfig":"51"},{"size":1671,"mtime":1638970457980,"results":"79","hashOfConfig":"51"},{"size":1328,"mtime":1638970452546,"results":"80","hashOfConfig":"51"},{"size":419,"mtime":1638970560409,"results":"81","hashOfConfig":"51"},{"size":283,"mtime":1638970554645,"results":"82","hashOfConfig":"51"},{"size":3622,"mtime":1638971247635,"results":"83","hashOfConfig":"51"},{"size":1689,"mtime":1638971178664,"results":"84","hashOfConfig":"51"},{"size":1662,"mtime":1638970442602,"results":"85","hashOfConfig":"51"},{"size":410,"mtime":1638970548220,"results":"86","hashOfConfig":"51"},{"size":1002,"mtime":1638970435408,"results":"87","hashOfConfig":"51"},{"size":363,"mtime":1638970490283,"results":"88","hashOfConfig":"51"},{"size":2457,"mtime":1638971222802,"results":"89","hashOfConfig":"51"},{"size":1054,"mtime":1638970991348,"results":"90","hashOfConfig":"51"},{"size":1054,"mtime":1638970991348,"results":"91","hashOfConfig":"51"},{"size":1270,"mtime":1638970589167,"results":"92","hashOfConfig":"51"},{"size":1381,"mtime":1638970595948,"results":"93","hashOfConfig":"51"},{"size":1436,"mtime":1638970598839,"results":"94","hashOfConfig":"51"},{"size":1280,"mtime":1638970601409,"results":"95","hashOfConfig":"51"},{"size":2184,"mtime":1638971140001,"results":"96","hashOfConfig":"51"},{"size":1089,"mtime":1638970609032,"results":"97","hashOfConfig":"51"},{"size":336,"mtime":1638970593584,"results":"98","hashOfConfig":"51"},{"size":1412,"mtime":1638971278870,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"18nkuk2",{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joonholee/dev/piggybank-ver-1.0/client/src/index.jsx",[],["210","211"],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/index.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/budgetReducer.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/userReducer.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/savingGoalReducer.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/payingReducer.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/savingReducer.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/reducers/dateReducer.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/App.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/types.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Style/theme.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Style/GlobalStyles.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/routes.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/Nav.jsx",["212"],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Home/Home.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Paying/Paying.jsx",["213"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Auth from \"../../../hoc/auth\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CenterButton from \"../../common/CenterButton\";\nimport Header from \"../../common/Header.jsx\";\nimport { Helmet } from \"react-helmet\";\nimport Footer from \"../../common/Footer\";\nimport CreateBoard from \"../../common/CreateBoard\";\nimport CreateList from \"../../common/CreateList\";\nimport { readPaying } from \"../../../redux/actions/payingActions\";\nimport theme from \"../../../Style/theme\";\n\nconst PayingBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .content {\n    background-color: ${(props) => props.theme.color.white};\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex: 1;\n    align-items: center;\n    margin-bottom: 3rem;\n  }\n`;\n\nconst Paying = () => {\n  const { payingList } = useSelector(({ payingReducer }) => ({\n    payingList: payingReducer.payingList,\n  }));\n\n  const { monthlyBudget } = useSelector(({ budgetReducer }) => ({\n    monthlyBudget: budgetReducer.monthlyBudget,\n  }));\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(readPaying());\n  }, []);\n\n  return (\n    <PayingBlock>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>지출관리 | 돼지저금통</title>\n      </Helmet>\n      <Header />\n      <CenterButton />\n      <div className=\"content\">\n        <CreateBoard\n          isPaying={true}\n          InfoName=\"소비\"\n          selectOptions={monthlyBudget}\n        />\n        <CreateList\n          color={theme.color.skyblue}\n          isPaying={true}\n          dataList={payingList}\n          isCategory={true}\n        />\n      </div>\n      <Footer />\n    </PayingBlock>\n  );\n};\n\nexport default Auth(Paying, true);\n","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Introduction/Introduce.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Join/Join.jsx",["214"],"import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AiFillLock } from \"react-icons/ai\";\nimport { BsFillPersonFill } from \"react-icons/bs\";\nimport { useDispatch } from \"react-redux\";\nimport Auth from \"../../../hoc/auth\";\nimport { withRouter } from \"react-router\";\nimport { joinUser } from \"../../../redux/actions/userActions\";\nimport Input from \"../../utils/Input\";\nimport Button from \"../../utils/Button\";\n\nconst JoinBlock = styled.form`\n  background-color: ${(props) => props.theme.color.lightgrey};\n  position: absolute;\n  left: 40%;\n  padding: 2rem;\n  margin-top: 6rem;\n`;\n\nconst StyledInput = styled(Input)`\n  flex: 1;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  background: ${(props) => props.theme.color.white};\n  align-items: center;\n  border: 1.5px solid black;\n\n  svg {\n    font-size: 1.7rem;\n  }\n\n  &:last-child {\n    background: ${(props) => props.theme.color.pink};\n    border: none;\n    outline: none;\n    font-weight: 600;\n    /* padding: 10px; */\n    margin-top: 10px;\n    border-radius: 10px;\n    width: 100%;\n    flex: 1;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst Join = ({ history }) => {\n  const dispatch = useDispatch();\n  const [Name, setName] = useState(\"\");\n  const [Id, setId] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [PasswordConfirm, setPasswordConfirm] = useState(\"\");\n\n  const onNameChange = useCallback((e) => {\n    setName(e.target.value);\n  }, []);\n\n  const onIdChange = useCallback((e) => {\n    setId(e.target.value);\n  }, []);\n\n  const onPasswordChange = useCallback((e) => {\n    setPassword(e.target.value);\n  }, []);\n\n  const onPasswordConfirmChange = useCallback((e) => {\n    setPasswordConfirm(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback((e) => {\n    e.preventDefault();\n\n    let body = {\n      name: Name,\n      id: Id,\n      password: Password,\n      passwordConfirm: PasswordConfirm,\n    };\n    dispatch(joinUser(body)).then((response) => {\n      if (response.payload.data.joinSuccess) {\n        alert(\"회원가입에 성공했습니다.\");\n        history.push(\"/login\");\n      } else {\n        alert(\"다시 시도해주세요.\");\n      }\n    });\n    setName(\"\");\n    setId(\"\");\n    setPassword(\"\");\n    setPasswordConfirm(\"\");\n  }, []);\n\n  return (\n    <JoinBlock onSubmit={onSubmit}>\n      <label htmlFor=\"name\"></label>\n      <InputContainer>\n        <BsFillPersonFill />\n        <Input\n          id=\"name\"\n          type=\"name\"\n          placeholder=\"이름을 입력하세요\"\n          onChange={onNameChange}\n          value={Name}\n          required\n        />\n      </InputContainer>\n      <label htmlFor=\"ID\"></label>\n      <InputContainer>\n        <BsFillPersonFill />\n        <StyledInput\n          id=\"id\"\n          type=\"id\"\n          placeholder=\"아이디를 입력하세요\"\n          onChange={onIdChange}\n          value={Id}\n          required\n        />\n      </InputContainer>\n      <label htmlFor=\"password\"></label>\n      <InputContainer>\n        <AiFillLock />\n        <StyledInput\n          id=\"password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          placeholder=\"비밀번호를 입력하세요\"\n          onChange={onPasswordChange}\n          value={Password}\n          required\n        ></StyledInput>\n      </InputContainer>\n      <label htmlFor=\"password2\"></label>\n      <InputContainer>\n        <AiFillLock />\n        <StyledInput\n          id=\"password2\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          placeholder=\"비밀번호를 입력하세요\"\n          onChange={onPasswordConfirmChange}\n          value={PasswordConfirm}\n          required\n        ></StyledInput>\n      </InputContainer>\n      <InputContainer>\n        <Button type=\"submit\">전송하기</Button>\n      </InputContainer>\n    </JoinBlock>\n  );\n};\n\nexport default Auth(withRouter(Join), false);\n","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Mypage/Mypage.jsx",["215"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DateModal from \"../../utils/DateModal\";\nimport MonthDataList from \"../../charts/MonthDataList\";\nimport PieTotalRatio from \"../../charts/PieTotalRatio\";\nimport { monthBudget } from \"../../../redux/actions/budgetActions\";\nimport { monthPaying } from \"../../../redux/actions/payingActions\";\nimport { monthSaving } from \"../../../redux/actions/savingActions\";\nimport { monthSavingGoal } from \"../../../redux/actions/savingGoalActions\";\nimport theme from \"../../../Style/theme\";\nimport Footer from \"../../common/Footer\";\n\nconst MypageBlock = styled.div`\n  position: relative;\n  background-color: white;\n`;\n\nconst UserBlock = styled.div`\n  display: flex;\n  padding-top: 6rem;\n  height: 10vh;\n\n  h2 {\n    flex: 9;\n  }\n`;\n\nconst DataBlock = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n\n  & > div:last-child {\n    position: absolute;\n    top: 10%;\n    right: 0%;\n\n    & > button {\n      width: 6rem;\n      height: 3rem;\n      border-radius: 10px;\n    }\n  }\n`;\nconst ChartBlock = styled.div`\n  width: 20rem;\n  height: 20rem;\n  margin: 3rem;\n  & > span {\n    font-weight: 600;\n    font-size: 1rem;\n    margin: 3rem;\n  }\n`;\n\nconst ColumnBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  &:last-child() {\n    position: absolute;\n  }\n`;\n\nconst Mypage = () => {\n  const { budgetSum, monthlyBudget, budgetCategorySum } = useSelector(\n    ({ budgetReducer }) => ({\n      budgetSum: budgetReducer.budgetSum,\n      monthlyBudget: budgetReducer.monthlyBudget,\n      budgetCategorySum: budgetReducer.categorySum,\n    })\n  );\n\n  const { savingGoalSum, monthlySavingGoal, savingGoalCategorySum } =\n    useSelector(({ savingGoalReducer }) => ({\n      savingGoalSum: savingGoalReducer.savingGoalSum,\n      monthlySavingGoal: savingGoalReducer.monthlySavingGoal,\n      savingGoalCategorySum: savingGoalReducer.categorySum,\n    }));\n  const { yearInfo, monthInfo } = useSelector(({ dateReducer }) => ({\n    yearInfo: dateReducer.yearInfo,\n    monthInfo: dateReducer.monthInfo,\n  }));\n\n  const { userName } = useSelector(({ userReducer }) => ({\n    userName: userReducer.user.name,\n  }));\n\n  const payingData = [\n    {\n      id: \"총 소비액수\",\n      value: budgetCategorySum, // 전체 소비액\n      color: \"hsl(181, 70%, 50%)\", // 카테고리 색상\n    },\n    {\n      id: \"남은 예산\",\n      value: savingGoalSum - budgetCategorySum,\n      color: \"hsl(236, 70%, 50%)\",\n    },\n  ];\n\n  const savingData = [\n    {\n      id: \"총 저축액수\",\n      value: savingGoalCategorySum, // 전체 소비액\n      color: \"hsl(181, 70%, 50%)\", // 카테고리 색상\n    },\n    {\n      id: \"남은 저축목표액\",\n      value: savingGoalSum - savingGoalCategorySum,\n      color: \"hsl(236, 70%, 50%)\",\n    },\n  ];\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let body = {\n      year: yearInfo,\n      month: monthInfo,\n    };\n    async function fetchPageData() {\n      await dispatch(monthBudget(body));\n      await dispatch(monthPaying(body));\n      await dispatch(monthSaving(body));\n      await dispatch(monthSavingGoal(body));\n    }\n    fetchPageData();\n  }, [yearInfo, monthInfo]);\n\n  return (\n    <MypageBlock>\n      <UserBlock>\n        <h2>\n          {userName}님의 {monthInfo}월 지출/저축 정보입니다\n        </h2>\n        <DateModal yearInfo={yearInfo} monthInfo={monthInfo} />\n      </UserBlock>\n      <DataBlock>\n        <ColumnBlock>\n          {monthlyBudget !== null ? (\n            <MonthDataList\n              isBudget={true}\n              monthlyData={monthlyBudget}\n              isCategory={false}\n              color={theme.color.apricot}\n            />\n          ) : (\n            <></>\n          )}\n          {monthlySavingGoal !== null ? (\n            <MonthDataList\n              isBudget={false}\n              monthlyData={monthlySavingGoal}\n              isCategory={false}\n              color={theme.color.pink}\n            />\n          ) : (\n            <></>\n          )}\n        </ColumnBlock>\n        <ColumnBlock>\n          {budgetCategorySum !== 0 && budgetSum !== 0 ? (\n            <ChartBlock>\n              <span>예산/지출액</span>\n              <PieTotalRatio data={payingData} color=\"set1\" />\n              <p>\n                {`소비율 ` +\n                  Math.floor(\n                    (1 - (budgetSum - budgetCategorySum) / budgetSum) * 100,\n                    2\n                  ) +\n                  `%`}\n              </p>\n            </ChartBlock>\n          ) : (\n            <></>\n          )}\n          <ChartBlock>\n            {budgetCategorySum !== 0 && budgetSum !== 0 ? (\n              <>\n                <span>목표액/저축액</span>\n                <PieTotalRatio data={savingData} color=\"set1\" />\n                <p>\n                  {`달성률 ` +\n                    Math.floor(\n                      (1 -\n                        (savingGoalSum - savingGoalCategorySum) /\n                          savingGoalSum) *\n                        100,\n                      2\n                    ) +\n                    `%`}\n                </p>\n              </>\n            ) : (\n              <></>\n            )}\n          </ChartBlock>\n        </ColumnBlock>\n        <div></div>\n      </DataBlock>\n      <Footer />\n    </MypageBlock>\n  );\n};\n\nexport default Mypage;\n","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/SavingGoal/SavingGoal.jsx",["216"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../../common/Header.jsx\";\nimport { Helmet } from \"react-helmet\";\nimport Auth from \"../../../hoc/auth\";\nimport CenterButton from \"../../common/CenterButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Footer from \"../../common/Footer\";\nimport ContentHeader from \"../../common/ContentHeader\";\nimport ContentBody from \"../../common/ContentBody\";\nimport { monthSaving } from \"../../../redux/actions/savingActions\";\nimport { monthSavingGoal } from \"../../../redux/actions/savingGoalActions\";\nimport CreateBoard from \"../../common/CreateBoard\";\nimport DateModal from \"../../utils/DateModal\";\n\nconst SavingGoalBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .content {\n    margin: 0 auto;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: ${(props) => props.theme.color.white};\n  }\n`;\n\nconst SavingGoal = () => {\n  const { monthInfo, yearInfo } = useSelector(({ dateReducer }) => ({\n    monthInfo: dateReducer.monthInfo,\n    yearInfo: dateReducer.yearInfo,\n  }));\n  const { savingGoalSum, monthlySavingGoal, savingSum } = useSelector(\n    ({ savingGoalReducer }) => ({\n      savingGoalSum: savingGoalReducer.savingGoalSum,\n      monthlySavingGoal: savingGoalReducer.monthlySavingGoal,\n      savingSum: savingGoalReducer.categorySum,\n    })\n  );\n\n  const dispatch = useDispatch();\n\n  async function fetchPageData() {\n    let body = {\n      year: yearInfo,\n      month: monthInfo,\n    };\n\n    await dispatch(monthSaving(body));\n    await dispatch(monthSavingGoal(body));\n  }\n\n  useEffect(() => {\n    fetchPageData();\n  }, [yearInfo, monthInfo]);\n\n  const pocketMoney = savingGoalSum - savingSum;\n\n  return (\n    <SavingGoalBlock>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>저축목표관리 | 돼지저금통</title>\n      </Helmet>\n      <Header />\n      <CenterButton />\n      <main className=\"content\">\n        <CreateBoard isSavingGoal={true} InfoName=\"저축목표\" />\n        <div className=\"modal__container\">\n          <DateModal yearInfo={yearInfo} monthInfo={monthInfo} />\n        </div>\n        <ContentHeader\n          yearInfo={yearInfo}\n          monthInfo={monthInfo}\n          used={savingSum}\n          remained={pocketMoney}\n          isBudget={false}\n          savingGoalSum={savingGoalSum}\n        ></ContentHeader>\n        <ContentBody\n          savingGoalSum={savingGoalSum}\n          used={savingSum}\n          remained={pocketMoney}\n          monthlyData={monthlySavingGoal}\n          isBudget={false}\n        ></ContentBody>\n      </main>\n      <Footer />\n    </SavingGoalBlock>\n  );\n};\n\nexport default Auth(SavingGoal, true);\n","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Budget/Budget.jsx",["217"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport Footer from \"../../common/Footer\";\nimport styled from \"styled-components\";\nimport { monthBudget } from \"../../../redux/actions/budgetActions\";\nimport CenterButton from \"../../common/CenterButton\";\nimport Header from \"../../common/Header.jsx\";\nimport ContentBody from \"../../common/ContentBody\";\nimport ContentHeader from \"../../common/ContentHeader\";\nimport Auth from \"../../../hoc/auth\";\nimport CreateBoard from \"../../common/CreateBoard\";\nimport DateModal from \"../../utils/DateModal\";\n\nconst BudgetBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .content {\n    margin: 0 auto;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: ${(props) => props.theme.color.white};\n  }\n`;\n\nconst Budget = () => {\n  const dispatch = useDispatch();\n\n  const { yearInfo, monthInfo } = useSelector(({ dateReducer }) => ({\n    yearInfo: dateReducer.yearInfo,\n    monthInfo: dateReducer.monthInfo,\n  }));\n\n  const { budgetSum, monthlyBudget, payingSum } = useSelector(\n    ({ budgetReducer }) => ({\n      budgetSum: budgetReducer.budgetSum,\n      monthlyBudget: budgetReducer.monthlyBudget,\n      payingSum: budgetReducer.categorySum,\n    })\n  );\n\n  useEffect(() => {\n    let body = {\n      year: yearInfo,\n      month: monthInfo,\n    };\n    async function fetchPageData() {\n      await dispatch(monthBudget(body));\n    }\n    fetchPageData();\n  }, [yearInfo, monthInfo]);\n\n  const pocketMoney = budgetSum - payingSum;\n\n  return (\n    <BudgetBlock>\n      <Helmet>\n        <title>이번달 소비관리 | 돼지저금통</title>\n      </Helmet>\n      <Header />\n      <CenterButton />\n      <main className=\"content\">\n        <CreateBoard isBudget={true} InfoName=\"예산\" />\n        <div>\n          <DateModal yearInfo={yearInfo} monthInfo={monthInfo} />\n        </div>\n        <ContentHeader\n          yearInfo={yearInfo}\n          monthInfo={monthInfo}\n          used={payingSum}\n          remained={pocketMoney}\n          isBudget={true}\n          budgetSum={budgetSum}\n        ></ContentHeader>\n        <ContentBody\n          budgetSum={budgetSum}\n          monthlyData={monthlyBudget}\n          used={payingSum}\n          remained={pocketMoney}\n          isBudget={true}\n          isCategory={false}\n        ></ContentBody>\n      </main>\n      <Footer />\n    </BudgetBlock>\n  );\n};\n\nexport default Auth(Budget, true);\n","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Login/Login.jsx",["218"],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/pages/Saving/Saving.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/Header.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/Footer.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/CenterButton.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/CreateList.jsx",["219","220","221","222"],"import React, { useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { RiDeleteBack2Fill } from \"react-icons/ri\";\nimport CategoryBlock from \"../charts/CategoryBlock\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteSaving, readSaving } from \"../../redux/actions/savingActions\";\nimport { deletePaying, readPaying } from \"../../redux/actions/payingActions\";\n\nconst CreateListBlock = styled.div``;\n\nconst InputContentBlock = styled.div`\n  background-color: ${(props) => props.theme.color.pink};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* margin: 3rem; */\n  & > div > svg {\n    cursor: pointer;\n  }\n`;\n\nconst PriceBlock = styled.div`\n  display: flex;\n  align-items: center;\n  width: 80%;\n\n  & > div:nth-child(1) {\n    width: 30%;\n    font-size: 0.7rem;\n  }\n\n  /* 금액 */\n  & > div:nth-child(2) {\n    flex: 1;\n    font-size: 1.5rem;\n    & > p {\n      font-size: 1rem;\n    }\n  }\n\n  /* 이모티콘들 */\n  & > div:nth-child(3) > div {\n    display: flex;\n    flex-direction: column;\n    font-size: 2rem;\n    margin: 1.5rem;\n  }\n`;\n\nconst BackgroundBlock = styled.div`\n  display: flex;\n  width: 80%;\n  margin: 3rem;\n  background-color: ${(props) => props.theme.color.white};\n\n  & > div:last-child() {\n    flex: 1;\n    font-size: 1.5rem;\n  }\n`;\n\nconst CreateList = ({ dataList, color, isCategory, isPaying }) => {\n  const dispatch = useDispatch();\n  async function fetchSavingData() {\n    await dispatch(readSaving());\n  }\n\n  async function fetchPayingData() {\n    await dispatch(readPaying());\n  }\n\n  const onDelete = useCallback((id) => {\n    if (isPaying) {\n      dispatch(deletePaying(id)).then((response) => {\n        if (response.payload.data.success) {\n          console.log(\"실행됨\");\n          fetchPayingData();\n        }\n      });\n    } else {\n      dispatch(deleteSaving(id)).then((response) => {\n        if (response.payload.data.success) {\n          console.log(\"실행됨\");\n          fetchSavingData();\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchSavingData();\n  }, []);\n\n  useEffect(() => {\n    fetchPayingData();\n  }, []);\n\n  const confirmDelete = useCallback((id) => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      alert(\"삭제되었습니다\");\n      onDelete(id);\n    } else {\n      alert(\"취소되었습니다\");\n    }\n  }, []);\n\n  return (\n    <CreateListBlock>\n      <InputContentBlock>\n        {dataList ? (\n          dataList.map((data) => (\n            <BackgroundBlock>\n              <CategoryBlock\n                color={color}\n                data={data}\n                isCategory={isCategory}\n              />\n              <PriceBlock>\n                <div>생성일 : {data.date}</div>\n                <div>\n                  <span>{data.price + `원`}</span>\n                  {data.memo ? <p> data.memo </p> : <p></p>}\n                </div>\n                <div>\n                  <div>\n                    <RiDeleteBack2Fill\n                      onClick={() => confirmDelete(data._id)}\n                    />\n                  </div>\n                </div>\n              </PriceBlock>\n            </BackgroundBlock>\n          ))\n        ) : (\n          <div>empty</div>\n        )}\n      </InputContentBlock>\n    </CreateListBlock>\n  );\n};\n\nexport default React.memo(CreateList);\n","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/CreateBoard.jsx",["223","224"],"import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useInput from \"../hooks/useInput\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { createPaying, readPaying } from \"../../redux/actions/payingActions\";\nimport { createSaving, readSaving } from \"../../redux/actions/savingActions\";\nimport { createBudget, monthBudget } from \"../../redux/actions/budgetActions\";\nimport {\n  createSavingGoal,\n  monthSavingGoal,\n} from \"../../redux/actions/savingGoalActions\";\nimport theme from \"../../Style/theme\";\nimport Button from \"../utils/Button\";\nimport Input from \"../utils/Input\";\n\nconst CreateBoard = ({\n  isBudget,\n  isSaving,\n  isSavingGoal,\n  isPaying,\n  InfoName,\n  selectOptions,\n}) => {\n  const dispatch = useDispatch();\n  const { userInfo } = useSelector(({ userReducer }) => ({\n    userInfo: userReducer.userId,\n  }));\n  const { yearInfo, monthInfo } = useSelector(({ dateReducer }) => ({\n    yearInfo: dateReducer.yearInfo,\n    monthInfo: dateReducer.monthInfo,\n  }));\n\n  const [open, setOpen] = useState(false);\n  const { value: name, reset: resetName, bind: bindName } = useInput(\"\");\n  const {\n    value: inputPrice,\n    reset: resetInputPrice,\n    bind: bindInputPrice,\n  } = useInput(\"\");\n  const { value: date, reset: resetDate, bind: bindDate } = useInput(\"\");\n  const {\n    value: category,\n    reset: resetCategory,\n    bind: bindCategory,\n  } = useInput(\"\");\n  const { value: option, bind: bindOption } = useInput(InfoName);\n  const onButtonClick = useCallback(() => setOpen(!open), []);\n\n  const onSubmit = useCallback((e) => {\n    e.preventDefault();\n    if (isBudget || isSavingGoal) {\n      let body = {\n        user: userInfo,\n        date,\n        title: name,\n        price: inputPrice,\n      };\n      if (isBudget) {\n        dispatch(createBudget(body)).then((response) => {\n          if (response.payload.data.CreateSuccess) {\n            dispatch(monthBudget({ year: yearInfo, month: monthInfo }));\n          }\n        });\n      } else {\n        dispatch(createSavingGoal(body)).then((response) => {\n          if (response.payload.data.CreateSuccess) {\n            dispatch(monthSavingGoal({ year: yearInfo, month: monthInfo }));\n          }\n        });\n      }\n      resetName();\n      resetInputPrice();\n      resetDate();\n    } else if (isPaying || isSaving) {\n      let body = {\n        user: userInfo,\n        date,\n        category,\n        title: name,\n        price: inputPrice,\n      };\n      if (option === \"소비\") {\n        dispatch(createPaying(body)).then((response) => {\n          if (response.payload.data.success) {\n            dispatch(readPaying());\n          }\n        });\n      } else if (option === \"저축\") {\n        dispatch(createSaving(body)).then((response) => {\n          if (response.payload.data.success) {\n            dispatch(readSaving());\n          }\n        });\n      }\n      resetName(\"\");\n      resetInputPrice(\"\");\n      resetDate(\"\");\n      resetCategory(\"\");\n    }\n  }, []);\n\n  return (\n    <CreateBoardBlock>\n      <div className=\"icon__container\" onClick={onButtonClick} open={open}>\n        <span>{InfoName}항목 작성하기</span>\n        <AiOutlinePlus />\n      </div>\n      {open && (\n        <div className=\"createBoard__Block\">\n          <h1>\n            {yearInfo}년 {monthInfo}월 {InfoName}정보\n          </h1>\n          <form className=\"create-form\" onSubmit={onSubmit}>\n            <div className=\"input__container\">\n              <StyledInput\n                placeholder={InfoName + \"명\"}\n                {...bindName}\n                required\n              ></StyledInput>\n            </div>\n            <div className=\"input__container\">\n              <StyledInput\n                placeholder={InfoName + \"액\"}\n                {...bindInputPrice}\n                required\n              ></StyledInput>\n            </div>\n            <div className=\"input__container\">\n              <StyledInput type=\"date\" {...bindDate} required></StyledInput>\n            </div>\n            {isPaying || isSaving ? (\n              <>\n                <select className=\"form-select\" {...bindCategory}>\n                  <option>카테고리</option>\n                  {selectOptions ? (\n                    selectOptions.map((data, index) => (\n                      <option key={index} value={data._id}>\n                        {data.title}\n                      </option>\n                    ))\n                  ) : (\n                    <></>\n                  )}\n                </select>\n                <div className=\"input__container\">\n                  {isPaying ? (\n                    <>\n                      <input\n                        style={{ width: \"30px\" }}\n                        id=\"CS\"\n                        type=\"radio\"\n                        checked={option === \"소비\"}\n                        {...bindOption}\n                        required\n                      ></input>\n                      <label htmlFor=\"CS\">소비 </label>\n                    </>\n                  ) : (\n                    <>\n                      <input\n                        style={{ width: \"30px\" }}\n                        id=\"SV\"\n                        type=\"radio\"\n                        checked={option === \"저축\"}\n                        {...bindOption}\n                        required\n                      ></input>\n                      <label htmlFor=\"SV\">저축 </label>\n                    </>\n                  )}\n                </div>\n              </>\n            ) : (\n              <></>\n            )}\n            <div>\n              <StyledButton color={theme.color.navy} type=\"submit\">\n                전송하기\n              </StyledButton>\n            </div>\n          </form>\n        </div>\n      )}\n    </CreateBoardBlock>\n  );\n};\n\nexport default CreateBoard;\n\nconst CreateBoardBlock = styled.section`\n  .createBoard__Block {\n    padding: 2rem;\n    background-color: ${(props) => props.theme.color.lightgrey};\n\n    .input__container {\n      background-color: ${(props) => props.theme.color.white};\n    }\n  }\n\n  .icon__container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 2rem;\n    font-size: 2rem;\n    span:hover {\n      cursor: pointer;\n    }\n\n    svg {\n      border-radius: 20px;\n      background-color: ${(props) => props.theme.color.navy};\n      font-size: 2.5rem;\n\n      color: white;\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  .create-form {\n    display: flex;\n    margin-top: 1rem;\n    flex-direction: column;\n  }\n\n  .form-select {\n    margin: 0 auto;\n    border: 1px solid black;\n    width: 364px;\n    height: 3rem;\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  border: 1px solid black;\n  width: 364px;\n  height: 3rem;\n`;\n\nconst StyledButton = styled(Button)`\n  border: 1px solid black;\n  width: 364px;\n  height: 3rem;\n`;\n","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/ContentHeader.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/common/ContentBody.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/utils/LoginRequired.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/utils/Input.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/utils/DateModal.jsx",["225"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { getDateInfo } from \"../../redux/actions/dateAction\";\nimport theme from \"../../Style/theme\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nconst DateModalBlock = styled.div`\n  .modal__wrapper {\n    position: absolute;\n    width: 500px;\n    height: 500px;\n    top: 20%;\n    left: 50%;\n    margin: 0 0 0 -250px;\n    background: #eee;\n    z-index: 4;\n    & > div > h2 {\n      font-size: 1.5rem;\n      padding-top: 1.5rem;\n    }\n  }\n\n  .modal__background {\n    position: absolute;\n    width: 100%;\n    height: 147%;\n    background-color: rgba(0, 0, 0, 0.5);\n    top: 0;\n    left: 0%;\n    z-index: 3;\n  }\n\n  .modal__close__btn {\n    position: absolute;\n    right: 0%;\n    background-color: red;\n    width: 3rem;\n  }\n\n  .content__container {\n    margin: 0 auto;\n    width: 80%;\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  height: 3rem;\n  border: 1px solid #99d4ff;\n  background-color: ${(props) => props.theme.color.skyblue};\n`;\n\nconst DateModalForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 150px 0 0 0;\n`;\n\nconst ModalButton = styled(Button)`\n  flex: 1;\n  margin-right: 2rem;\n  margin-left: 1rem;\n  z-index: 1;\n  font-size: 1.2rem;\n`;\n\nconst SubmitBtn = styled(Button)`\n  border: 1.7px solid #4645ff;\n  margin: 0 auto;\n`;\n\nconst DateModal = ({ yearInfo, monthInfo }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [year, setYear] = useState(yearInfo);\n  const [month, setMonth] = useState(monthInfo);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.onkeydown = (event) => {\n      if (event.code === \"Escape\") {\n        setModalOpen(false);\n      }\n    };\n  }, [modalOpen]);\n\n  const onSubmitModal = useCallback(async (e) => {\n    e.preventDefault();\n    let body = {\n      year: `${year}`,\n      month: `${month}`,\n    };\n    await dispatch(getDateInfo(body));\n    setYear(\"\");\n    setMonth(\"\");\n    setModalOpen(false);\n  }, []);\n\n  const onChangeYear = useCallback((e) => {\n    setYear(e.target.value);\n  }, []);\n\n  const onChangeMonth = useCallback((e) => {\n    setMonth(e.target.value);\n  }, []);\n\n  return (\n    <DateModalBlock>\n      <ModalButton\n        color={theme.color.lightpurple}\n        onClick={() => setModalOpen(true)}\n      >\n        조회\n      </ModalButton>\n      {modalOpen && (\n        <>\n          <div className=\"modal__background\"></div>\n          <div className=\"modal__wrapper\">\n            <div\n              className=\"modal__close__btn\"\n              onClick={() => setModalOpen(false)}\n            >\n              <div>X</div>\n            </div>\n            <div className=\"content__container\">\n              <h2>조회를 원하는 달을 선택하세요</h2>\n              <DateModalForm onSubmit={onSubmitModal}>\n                <StyledInput\n                  className=\"form__input\"\n                  type=\"text\"\n                  name=\"year\"\n                  onChange={onChangeYear}\n                  value={year}\n                ></StyledInput>\n                <StyledInput\n                  className=\"form__input\"\n                  type=\"text\"\n                  name=\"month\"\n                  onChange={onChangeMonth}\n                  value={month}\n                ></StyledInput>\n                <SubmitBtn color={theme.color.navy} type=\"submit\">\n                  전송\n                </SubmitBtn>\n              </DateModalForm>\n            </div>\n          </div>\n        </>\n      )}\n    </DateModalBlock>\n  );\n};\n\nexport default DateModal;\n","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/charts/MonthDataList.jsx",["226"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport CategoryBlock from \"./CategoryBlock\";\nimport TotalRatioGauge from \"./TotalRatioGauge\";\nimport { monthBudget } from \"../../redux/actions/budgetActions\";\nimport { monthSavingGoal } from \"../../redux/actions/savingGoalActions\";\n\nconst MonthDataList = ({ monthlyData, color, isBudget }) => {\n  const dispatch = useDispatch();\n  const { yearInfo, monthInfo } = useSelector(({ dateReducer }) => ({\n    yearInfo: dateReducer.yearInfo,\n    monthInfo: dateReducer.monthInfo,\n  }));\n  useEffect(() => {\n    let body = {\n      year: yearInfo,\n      month: monthInfo,\n    };\n    if (isBudget) {\n      dispatch(monthBudget(body));\n    } else {\n      dispatch(monthSavingGoal(body));\n    }\n  }, []);\n\n  return (\n    <MonthDataListBlock>\n      {monthlyData ? (\n        monthlyData.map((data, index) => (\n          <div className=\"chart-block\">\n            <CategoryBlock color={color} data={data} isCategory={false} />\n            <TotalRatioGauge\n              data={data}\n              yearInfo={yearInfo}\n              monthInfo={monthInfo}\n              isBudget={isBudget}\n              categorySum={data.categoryPrice}\n            />\n          </div>\n        ))\n      ) : (\n        <div></div>\n      )}\n    </MonthDataListBlock>\n  );\n};\n\nexport default React.memo(MonthDataList);\n\nconst MonthDataListBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n\n  .chart-block {\n    display: flex;\n    align-items: center;\n    background-color: ${(props) => props.theme.color.grey};\n    margin: 1.5rem;\n  }\n`;\n","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/charts/PieTotalRatio.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/utils/Button.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/charts/CategoryBlock.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/hooks/useInput.jsx",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/charts/TotalRatioGauge.jsx",["227","228"],"import React, { useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { RiDeleteBack2Fill } from \"react-icons/ri\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteBudget, monthBudget } from \"../../redux/actions/budgetActions\";\nimport {\n  deleteSavingGoal,\n  monthSavingGoal,\n} from \"../../redux/actions/savingGoalActions\";\nimport Button from \"../utils/Button\";\n\nconst TotalRatioGaugeBlock = styled.div`\n  position: relative;\n  background-color: grey;\n  width: 10rem;\n  height: 1rem;\n  margin-right: 1rem;\n\n  .chart-gauge {\n    background-color: skyblue;\n    height: 1rem;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  position: absolute;\n  top: -400%;\n  right: -40%;\n  font-size: 2rem;\n`;\n\nconst TotalRatioGauge = ({\n  categorySum,\n  isBudget,\n  data,\n  yearInfo,\n  monthInfo,\n}) => {\n  const dispatch = useDispatch();\n  const onDelete = useCallback((id) => {\n    if (isBudget) {\n      dispatch(deleteBudget(id)).then((response) => {\n        if (response.payload.data.success) {\n          dispatch(monthBudget({ year: yearInfo, month: monthInfo }));\n          alert(\"삭제 되었습니다.\");\n        }\n      });\n    } else {\n      dispatch(deleteSavingGoal(id)).then((response) => {\n        if (response.payload.data.success) {\n          dispatch(monthSavingGoal({ year: yearInfo, month: monthInfo }));\n          alert(\"삭제 되었습니다.\");\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    let body = {\n      year: yearInfo,\n      month: monthInfo,\n    };\n    if (isBudget) {\n      dispatch(monthBudget(body));\n    } else {\n      dispatch(monthSavingGoal(body));\n    }\n  }, [dispatch]);\n\n  const confirmDelete = () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      alert(\"삭제되었습니다\");\n      onDelete(data._id);\n    } else {\n      alert(\"취소되었습니다\");\n    }\n  };\n\n  let gauge = Math.floor((categorySum * 100) / data.price, 2);\n\n  return (\n    <TotalRatioGaugeBlock>\n      <StyledButton>\n        <RiDeleteBack2Fill onClick={confirmDelete} />\n      </StyledButton>\n      <div>\n        <div className=\"chart-gauge\" style={{ width: `${gauge}%` }} />\n        <span>총소비액 : {categorySum}원 </span>\n        {isBudget ? (\n          <span>({`소비율 ` + gauge + `%`})</span>\n        ) : (\n          <span>({`달성률 ` + gauge + `%`})</span>\n        )}\n      </div>\n    </TotalRatioGaugeBlock>\n  );\n};\n\nexport default React.memo(TotalRatioGauge);\n","/Users/joonholee/dev/piggybank-ver-1.0/client/src/Hoc/auth.js",["229"],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/hoc/auth.js",["230"],"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nfunction Auth(SpecificComponent, option, adminRoute = null) {\n  const AuthenticationCheck = (props) => {\n    const { isAuth } = useSelector(({ userReducer }) => ({\n      isAuth: userReducer.isAuth,\n    }));\n\n    useEffect(() => {\n      if (!isAuth) {\n        // console.log(\"isAuth : false, 즉 로그인하지 않은 상태\");\n        if (option) {\n          alert(\"로그인이 필요합니다.\");\n          props.history.push(\"/login\");\n        }\n      } else {\n        // console.log(\"isAuth : true, 즉 로그인한 상태\");\n        if (adminRoute) {\n          // console.log(\"일반유저가 admin 페이지에 접근 시\");\n          props.history.push(\"/\");\n        } else {\n          if (option === false) {\n            alert(\"로그인한 유저가 접근할 수 없습니다\");\n            props.history.push(\"/\");\n          }\n        }\n      }\n    }, [isAuth]);\n    return <SpecificComponent />;\n  };\n  return AuthenticationCheck;\n}\n\nexport default Auth;\n","/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/budgetActions.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/payingActions.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/savingActions.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/savingGoalActions.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Api/api.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/userActions.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/redux/actions/dateAction.js",[],"/Users/joonholee/dev/piggybank-ver-1.0/client/src/Components/Router.jsx",[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":72,"column":5,"nodeType":"237","endLine":72,"endColumn":7,"suggestions":"238"},{"ruleId":"235","severity":1,"message":"239","line":43,"column":6,"nodeType":"237","endLine":43,"endColumn":8,"suggestions":"240"},{"ruleId":"235","severity":1,"message":"241","line":95,"column":6,"nodeType":"237","endLine":95,"endColumn":8,"suggestions":"242"},{"ruleId":"235","severity":1,"message":"239","line":129,"column":6,"nodeType":"237","endLine":129,"endColumn":27,"suggestions":"243"},{"ruleId":"235","severity":1,"message":"244","line":59,"column":6,"nodeType":"237","endLine":59,"endColumn":27,"suggestions":"245"},{"ruleId":"235","severity":1,"message":"239","line":56,"column":6,"nodeType":"237","endLine":56,"endColumn":27,"suggestions":"246"},{"ruleId":"235","severity":1,"message":"247","line":79,"column":6,"nodeType":"237","endLine":79,"endColumn":8,"suggestions":"248"},{"ruleId":"235","severity":1,"message":"249","line":88,"column":6,"nodeType":"237","endLine":88,"endColumn":8,"suggestions":"250"},{"ruleId":"235","severity":1,"message":"251","line":92,"column":6,"nodeType":"237","endLine":92,"endColumn":8,"suggestions":"252"},{"ruleId":"235","severity":1,"message":"253","line":96,"column":6,"nodeType":"237","endLine":96,"endColumn":8,"suggestions":"254"},{"ruleId":"235","severity":1,"message":"255","line":105,"column":6,"nodeType":"237","endLine":105,"endColumn":8,"suggestions":"256"},{"ruleId":"235","severity":1,"message":"257","line":49,"column":59,"nodeType":"237","endLine":49,"endColumn":61,"suggestions":"258"},{"ruleId":"235","severity":1,"message":"259","line":102,"column":6,"nodeType":"237","endLine":102,"endColumn":8,"suggestions":"260"},{"ruleId":"235","severity":1,"message":"261","line":98,"column":6,"nodeType":"237","endLine":98,"endColumn":8,"suggestions":"262"},{"ruleId":"235","severity":1,"message":"263","line":25,"column":6,"nodeType":"237","endLine":25,"endColumn":8,"suggestions":"264"},{"ruleId":"235","severity":1,"message":"265","line":56,"column":6,"nodeType":"237","endLine":56,"endColumn":8,"suggestions":"266"},{"ruleId":"235","severity":1,"message":"267","line":68,"column":6,"nodeType":"237","endLine":68,"endColumn":16,"suggestions":"268"},{"ruleId":"235","severity":1,"message":"269","line":29,"column":8,"nodeType":"237","endLine":29,"endColumn":16,"suggestions":"270"},{"ruleId":"235","severity":1,"message":"269","line":29,"column":8,"nodeType":"237","endLine":29,"endColumn":16,"suggestions":"271"},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["274"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["275"],"React Hook useCallback has missing dependencies: 'Id', 'Name', 'Password', 'PasswordConfirm', 'dispatch', and 'history'. Either include them or remove the dependency array.",["276"],["277"],"React Hook useEffect has a missing dependency: 'fetchPageData'. Either include it or remove the dependency array.",["278"],["279"],"React Hook useCallback has missing dependencies: 'Id', 'Password', 'dispatch', and 'history'. Either include them or remove the dependency array.",["280"],"React Hook useCallback has missing dependencies: 'dispatch', 'fetchPayingData', 'fetchSavingData', and 'isPaying'. Either include them or remove the dependency array.",["281"],"React Hook useEffect has a missing dependency: 'fetchSavingData'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'fetchPayingData'. Either include it or remove the dependency array.",["283"],"React Hook useCallback has a missing dependency: 'onDelete'. Either include it or remove the dependency array.",["284"],"React Hook useCallback has a missing dependency: 'open'. Either include it or remove the dependency array. You can also do a functional update 'setOpen(o => ...)' if you only need 'open' in the 'setOpen' call.",["285"],"React Hook useCallback has missing dependencies: 'category', 'date', 'dispatch', 'inputPrice', 'isBudget', 'isPaying', 'isSaving', 'isSavingGoal', 'monthInfo', 'name', 'option', 'resetCategory', 'resetDate', 'resetInputPrice', 'resetName', 'userInfo', and 'yearInfo'. Either include them or remove the dependency array.",["286"],"React Hook useCallback has missing dependencies: 'dispatch', 'month', and 'year'. Either include them or remove the dependency array.",["287"],"React Hook useEffect has missing dependencies: 'dispatch', 'isBudget', 'monthInfo', and 'yearInfo'. Either include them or remove the dependency array.",["288"],"React Hook useCallback has missing dependencies: 'dispatch', 'isBudget', 'monthInfo', and 'yearInfo'. Either include them or remove the dependency array.",["289"],"React Hook useEffect has missing dependencies: 'isBudget', 'monthInfo', and 'yearInfo'. Either include them or remove the dependency array.",["290"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["291"],["292"],"no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"299","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"320","fix":"322"},{"desc":"320","fix":"323"},{"desc":"324","fix":"325"},{"desc":"324","fix":"326"},"Update the dependencies array to be: [dispatch, history]",{"range":"327","text":"328"},"Update the dependencies array to be: [dispatch]",{"range":"329","text":"330"},"Update the dependencies array to be: [Id, Name, Password, PasswordConfirm, dispatch, history]",{"range":"331","text":"332"},"Update the dependencies array to be: [yearInfo, monthInfo, dispatch]",{"range":"333","text":"334"},"Update the dependencies array to be: [yearInfo, monthInfo, fetchPageData]",{"range":"335","text":"336"},{"range":"337","text":"334"},"Update the dependencies array to be: [Id, Password, dispatch, history]",{"range":"338","text":"339"},"Update the dependencies array to be: [dispatch, fetchPayingData, fetchSavingData, isPaying]",{"range":"340","text":"341"},"Update the dependencies array to be: [fetchSavingData]",{"range":"342","text":"343"},"Update the dependencies array to be: [fetchPayingData]",{"range":"344","text":"345"},"Update the dependencies array to be: [onDelete]",{"range":"346","text":"347"},"Update the dependencies array to be: [open]",{"range":"348","text":"349"},"Update the dependencies array to be: [category, date, dispatch, inputPrice, isBudget, isPaying, isSaving, isSavingGoal, monthInfo, name, option, resetCategory, resetDate, resetInputPrice, resetName, userInfo, yearInfo]",{"range":"350","text":"351"},"Update the dependencies array to be: [dispatch, month, year]",{"range":"352","text":"353"},"Update the dependencies array to be: [dispatch, isBudget, monthInfo, yearInfo]",{"range":"354","text":"355"},{"range":"356","text":"355"},{"range":"357","text":"355"},"Update the dependencies array to be: [isAuth, props.history]",{"range":"358","text":"359"},{"range":"360","text":"359"},[1736,1738],"[dispatch, history]",[1223,1225],"[dispatch]",[2265,2267],"[Id, Name, Password, PasswordConfirm, dispatch, history]",[3166,3187],"[yearInfo, monthInfo, dispatch]",[1750,1771],"[yearInfo, monthInfo, fetchPageData]",[1588,1609],[1855,1857],"[Id, Password, dispatch, history]",[1991,1993],"[dispatch, fetchPayingData, fetchSavingData, isPaying]",[2045,2047],"[fetchSavingData]",[2099,2101],"[fetchPayingData]",[2285,2287],"[onDelete]",[1636,1638],"[open]",[3067,3069],"[category, date, dispatch, inputPrice, isBudget, isPaying, isSaving, isSavingGoal, monthInfo, name, option, resetCategory, resetDate, resetInputPrice, resetName, userInfo, yearInfo]",[2058,2060],"[dispatch, month, year]",[826,828],"[dispatch, isBudget, monthInfo, yearInfo]",[1395,1397],[1609,1619],[844,852],"[isAuth, props.history]",[844,852]]